from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import os
import datetime

TOKEN = os.getenv("TOKEN")

KPI_LINK = 'https://docs.google.com/spreadsheets/d/187czH5iolCe_wmARbZ_blpQjzJQHQ7__/edit?gid=1652687997'

KPI_INFO = {
    "–ß—Ç–æ —Ç–∞–∫–æ–µ KPI": "üìä KPI ‚Äî —ç—Ç–æ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...",
    "–ö–∞–∫ –ø–∏—Å–∞—Ç—å": "‚úçÔ∏è –ü–∏—à–∏ –∑–∞–¥–∞—á–∏ –ø–æ SMART...",
    "–ö—Ä–∏—Ç–µ—Ä–∏–∏": "‚úÖ –ó–∞–¥–∞—á–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –Ω–∞ 100%, –≤ —Å—Ä–æ–∫ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ."
}

keyboard = [
    ["–ß—Ç–æ —Ç–∞–∫–æ–µ KPI", "–ö–∞–∫ –ø–∏—Å–∞—Ç—å"],
    ["–ö—Ä–∏—Ç–µ—Ä–∏–∏", "–ù–∞–ø–æ–º–Ω–∏—Ç—å"]
]
markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–µ –∑–∞–±—ã—Ç—å –ø—Ä–æ KPI –∏ –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Ö –æ—Ñ–æ—Ä–º–∏—Ç—å.",
        reply_markup=markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –ø–æ –∫–Ω–æ–ø–∫–∞–º
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text in KPI_INFO:
        await update.message.reply_text(KPI_INFO[text])
    elif text == "–ù–∞–ø–æ–º–Ω–∏—Ç—å":
        await update.message.reply_text(f"‚è∞ –ù–µ –∑–∞–±—É–¥—å –≤–Ω–µ—Å—Ç–∏ KPI –≤ —Ç–∞–±–ª–∏—Ü—É!\nüëâ {KPI_LINK}")
    else:
        await update.message.reply_text("–ù–µ –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É üëá")

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("remind", button_handler))  # –¥–ª—è —Ç–µ—Å—Ç—É, –ø–æ–∫–∏ —â–æ
app.add_handler(CommandHandler("what_is_kpi", button_handler))  # –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ
app.add_handler(CommandHandler("how_to_write", button_handler))  # –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ
app.add_handler(CommandHandler("criteria", button_handler))  # –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ

# –ì–æ–ª–æ–≤–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç—É (–≤—ñ–¥ –∫–Ω–æ–ø–æ–∫)
app.add_handler(CommandHandler(None, button_handler))  # –Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ –∫–æ–º–∞–Ω–¥–∞, –∞–ª–µ –±–µ–∑ /start
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, button_handler))

app.run_polling()
